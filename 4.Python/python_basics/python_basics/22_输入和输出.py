'''
在Python中, 输入和输出是与用户或系统进行交互的关键机制. Python提供了几种用于输入和输出的内置函数和方法
'''
# 1.输入(input)
'''
Python使用input()函数冲用户那里获取输入, 输入的数据总是作为字符串返回. 如果需要将其转换为其他数据类型, 
可以使用类型转换函数.
'''
# name = input('请输入你的名字: \n')
# print(f'你的名字是:{name}')

# age = int(input("请输入你的年龄: \n"))
# print(f"你的年龄是: {type(age)}")

# 2.输出(print)
'''
Python提供了print()函数用于输出到控制台. print()可以输出各种类型的内容, 并且支持多个参数的输出.
'''
a,b,c = '1','2','3'
print(a,b,c) # 1 2 3

# 基本输出
print("你好, 世界")

# 使用变量和格式化输出
'''
Python提供了几种格式化输出字符串的方式
'''
# f-字符串
name2 = '李四'
print(f"我的名字叫{name2}")

# format()方法
print('我叫{},今年{}岁'.format('李四',24)) # 我叫李四,今年24岁

# 百分号%格式化
name3 = '张三'
age2 = 39
print('他叫 %s,今年 %d' % (name3,age2)) # 他叫 张三,今年 39

# 3.自定义分隔符和结束符
'''
    1.sep:定义多个值之间的分隔符
    2.end:定义输出的结束符, 默认为换行符
'''
# 自定义分隔符
print('李四','王五','张三',sep='-') # 李四-王五-张三

# 自定义结束符
print("hello",end=" ") # 后面无换行符
print("world") # 后面有换行符

# 4.文件输入输出
'''
处理从用户输入控制台输出以外,Python也可以读取和写入文件
'''
# 打开文件
'''
使用open()函数打开文件进行读写操作. 可以指定模式:
 - 'r':读模式
 - 'w':写模式
 - 'a':追加模式
 - 'b':二进制模式, 用于读取或写入非文本文件(如图片,音频)
'''
# 写入文件
with open('text/a.txt', 'w',1024,'UTF-8') as f:
    f.write('你好,世界!')

# 读取文件
with open('text/a.txt', 'r',1024,'UTF-8') as f:
    print(f.read()) # 你好,世界!


# 文件模式的组合
'''
rb:以二进制模式读取文件
wb:以二进制模式写入文件
ab:以二进制模式追加到文件
'''

# 读取文件的不同方式
'''
read(): 读取整个文件内容
readline(): 一次读取一行
readlines(): 读取文件的所有行并返回一个列表
'''
# 逐行进行读取
with open('text/a.txt', 'r',1024,'UTF-8') as f:
    for line in f:
        print(line.strip()) # 你好,世界!

